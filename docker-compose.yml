services:
  api:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    container_name: api
    command: /start
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    # ports:
    #   - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres-db
      - redis
    networks:
      - fpl-vue

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client
    ports:
      - "3000:3000"
    restart: on-failure
    volumes:
      - ./client:/app
      - /app/node_modules
    command: npm run dev -- --host 0.0.0.0
    depends_on:
      - api
    networks:
      - fpl-vue

  postgres-db:
    image: postgres:12.0-alpine
    ports:
      - "5432:5432"
    container_name: postgres-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - fpl-vue

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - fpl-vue

  nginx:
    restart: always
    container_name: nginx
    depends_on:
      - api
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    build:
      context: ./docker/local/nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    networks:
      - fpl-vue

  flower:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-flower
    container_name: flower
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "5557:5555"
    depends_on:
      - redis
      - postgres-db
    networks:
      - fpl-vue
    

  celery_worker:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-celeryworker
    container_name: worker
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - postgres-db
    networks:
      - fpl-vue

  celery_beat:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    container_name: beat
    command: /start-celerybeat
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - postgres-db
    networks:
      - fpl-vue

networks:
  fpl-vue:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
