# Generated by Django 4.2.8 on 2025-03-13 13:52

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "pkid",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                ("logo_url", models.URLField()),
            ],
            options={
                "verbose_name": "KPL Team",
                "verbose_name_plural": "KPL Teams",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Standing",
            fields=[
                (
                    "pkid",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("position", models.PositiveIntegerField()),
                ("played", models.PositiveIntegerField()),
                ("wins", models.PositiveIntegerField()),
                ("draws", models.PositiveIntegerField()),
                ("losses", models.PositiveIntegerField()),
                ("goals_for", models.PositiveIntegerField()),
                ("goals_against", models.PositiveIntegerField()),
                ("goal_differential", models.IntegerField()),
                ("points", models.PositiveIntegerField()),
                ("period", models.CharField(max_length=30)),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="standings",
                        to="kpl.team",
                    ),
                ),
            ],
            options={
                "verbose_name": "KPL Standing",
                "verbose_name_plural": "KPL Standings",
                "ordering": ["position"],
            },
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "pkid",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                ("position", models.CharField(max_length=50)),
                ("jersey_number", models.IntegerField()),
                ("age", models.IntegerField()),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="players",
                        to="kpl.team",
                    ),
                ),
            ],
            options={
                "verbose_name": "Player",
                "verbose_name_plural": "Players",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Fixture",
            fields=[
                (
                    "pkid",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("match_date", models.DateTimeField()),
                ("venue", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("upcoming", "Upcoming"),
                            ("live", "Live"),
                            ("postponed", "Postponed"),
                            ("completed", "Completed"),
                        ],
                        default="upcoming",
                        max_length=20,
                    ),
                ),
                ("home_team_score", models.IntegerField(blank=True, null=True)),
                ("away_team_score", models.IntegerField(blank=True, null=True)),
                (
                    "away_team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="away_fixtures",
                        to="kpl.team",
                    ),
                ),
                (
                    "home_team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="home_fixtures",
                        to="kpl.team",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fixture",
                "verbose_name_plural": "Fixtures",
                "ordering": ["match_date"],
            },
        ),
    ]
